{"version":3,"sources":["Redux/Action/index.ts","Axios/index.ts","Page/Login/index.tsx","FrameWork/Sidebar/index.tsx","Router/Router.tsx","FrameWork/Layout/index.tsx","App/App.tsx","Mock/index.ts","Redux/Reducer/index.ts","Redux/Store/index.ts","Index/index.tsx"],"names":["cacheUser","user","type","axios","defaults","baseURL","headers","post","interceptors","request","use","config","error","Promise","reject","response","layout","labelCol","span","wrapperCol","tailLayout","offset","FormItem","Item","newLogin","connect","state","userName","phone","dispatch","ownProps","cacheLogin","props","className","title","style","width","name","initialValues","onFinish","values","then","data","errorCode","onFinishFailed","errorInfo","console","log","label","rules","required","message","htmlType","MenuList","menuName","menuUrl","icon","HomeOutlined","AppstoreOutlined","child","UserOutlined","UserSwitchOutlined","CheckOutlined","BookOutlined","FileProtectOutlined","PrinterOutlined","ProfileOutlined","RedoOutlined","MoneyCollectOutlined","ReconciliationOutlined","showMenu","menu","Icon","key","map","v","Result","Home","lazy","Router","fallback","exact","path","component","from","to","React","Component","Header","Content","Footer","Sider","MyLayout","overflow","height","position","left","theme","mode","onClick","a","sessionStorage","pageNum","marginLeft","padding","margin","minHeight","textAlign","cacheUserReducer","Random","Mock","mock","citys","i","obj","id","city","color","push","cityList","info","JSON","parse","body","img","image","value","undefined","initialState","rootReducer","combineReducers","action","store","createStore","getState","subscribe","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7f66c23d.chunk.js","sourcesContent":["function cacheUser(user:userMeg) {\r\n    return {\r\n        type: \"userLogin\",\r\n        user\r\n    }\r\n}\r\nexport {cacheUser}","import axios from 'axios'\r\naxios.defaults.baseURL=\"http://localhost:8081\"\r\naxios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded'\r\n\r\n// 请求拦截器\r\naxios.interceptors.request.use(function(config) {\r\n    return config\r\n}, function(error) {\r\n    return Promise.reject(error)\r\n})\r\n// 响应拦截器\r\naxios.interceptors.response.use(function(response) {\r\n    return response\r\n}, function(error) {\r\n    return Promise.reject(error)\r\n})\r\nexport default axios","import React, {FC} from \"react\";\r\nimport {connect} from 'react-redux'\r\nimport {Form, Input, Button, Card} from 'antd';\r\nimport {cacheUser} from \"../../Redux/Action\"\r\nimport axios from \"../../Axios\"\r\nimport \"./index.scss\"\r\n\r\nconst layout = {\r\n    labelCol: {span: 4},\r\n    wrapperCol: {span: 16},\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: {offset: 4, span: 16},\r\n};\r\nconst FormItem = Form.Item\r\nconst Login: FC<{\r\n    cacheLogin: (userParam: userMeg) => void,\r\n}> = (props) => {\r\n    const onFinish = (values: userMeg) => {\r\n        axios.post(\"/test/login\", {...values}).then((data: any) => {\r\n            if (data.data.errorCode === \"200\") {\r\n                //props.onChange(values,true)\r\n                props.cacheLogin(values);\r\n            }\r\n        })\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo: any) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    return (\r\n        <div className='loginBox'>\r\n            <Card title={\"地府后台管理系统\"} style={{width: 600}}>\r\n                <Form\r\n                    {...layout}\r\n                    name=\"basic\"\r\n                    initialValues={{\r\n                        userName: \"admin\",\r\n                        phone: \"13311112222\",\r\n                    }}\r\n                    onFinish={onFinish}\r\n                    onFinishFailed={onFinishFailed}\r\n                >\r\n                    <FormItem\r\n                        label=\"姓名\"\r\n                        name=\"userName\"\r\n                        rules={[{required: true, message: '请输入姓名'}]}\r\n                    >\r\n                        <Input/>\r\n                    </FormItem>\r\n\r\n                    <FormItem\r\n                        label=\"手机号\"\r\n                        name=\"phone\"\r\n                        rules={[{required: true, message: '请输入手机号!'}]}\r\n                    >\r\n                        <Input type={\"phone\"}/>\r\n                    </FormItem>\r\n                    <Form.Item {...tailLayout}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                            登录\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = (state: userMeg): userMeg => ({\r\n    userName: state.userName,\r\n    phone: state.phone\r\n})\r\nconst mapDispatchToProps = (dispatch: any, ownProps: any) => {\r\n    return {\r\n        cacheLogin: (user: userMeg) => {\r\n            dispatch(cacheUser(user))\r\n        },\r\n    }\r\n};\r\nlet newLogin = connect(mapStateToProps, mapDispatchToProps)(Login);\r\nexport {newLogin as Login}","import React from \"react\";\r\nimport {\r\n    UserOutlined,\r\n    HomeOutlined,\r\n    AppstoreOutlined,\r\n    UserSwitchOutlined,\r\n    CheckOutlined,\r\n    BookOutlined,\r\n    FileProtectOutlined,\r\n    PrinterOutlined, ProfileOutlined, RedoOutlined, MoneyCollectOutlined, ReconciliationOutlined\r\n} from '@ant-design/icons';\r\nimport SubMenu from \"antd/lib/menu/SubMenu\";\r\nimport Menu from \"antd/lib/menu\";\r\ninterface MenuItem {\r\n    child?: MenuItem[],\r\n    menuUrl: string | undefined,\r\n    menuName: string,\r\n    icon:any\r\n}\r\nexport const MenuList = [\r\n    {\r\n        menuName: '首页',\r\n        menuUrl: '/',\r\n        icon: HomeOutlined,\r\n    },{\r\n        menuName: '生死簿',\r\n        menuUrl: '/book',\r\n        icon: AppstoreOutlined,\r\n        child:[{\r\n            menuName: '用户管理',\r\n            menuUrl: '/allPeopleManagement',\r\n            icon: UserOutlined,\r\n        },{\r\n            menuName: '数据同步',\r\n            menuUrl: '/allPeopleData',\r\n            icon: UserSwitchOutlined,\r\n        }]\r\n    },{\r\n        menuName: '勾魂管理',\r\n        menuUrl: '/soul',\r\n        icon: CheckOutlined,\r\n    },{\r\n        menuName: '阎王殿审判记录',\r\n        menuUrl: '/record',\r\n        icon: BookOutlined,\r\n    },{\r\n        menuName: '十八层地狱',\r\n        menuUrl: '/hells',\r\n        icon: FileProtectOutlined,\r\n        child:[{\r\n            menuName: '设备管理',\r\n            menuUrl: '/deviceManagement',\r\n            icon: PrinterOutlined,\r\n        },{\r\n            menuName: '作业流程',\r\n            menuUrl: '/workManagement',\r\n            icon: ProfileOutlined,\r\n        },{\r\n            menuName: '用户管理',\r\n            menuUrl: '/hellsPeopleManagement',\r\n            icon: UserSwitchOutlined,\r\n        }]\r\n    },{\r\n        menuName: '六道轮回',\r\n        menuUrl: '/samsara',\r\n        icon: RedoOutlined,\r\n    },{\r\n        menuName: '冥币管理',\r\n        menuUrl: '/deathMoney',\r\n        icon: MoneyCollectOutlined,\r\n    },{\r\n        menuName: '日志管理',\r\n        menuUrl: '/journal',\r\n        icon: ReconciliationOutlined,\r\n    },{\r\n        menuName: '系统管理',\r\n        menuUrl: '/system',\r\n        icon: UserOutlined,\r\n        child:[{\r\n            menuName: '角色管理',\r\n            menuUrl: '/roleManagement',\r\n            icon: UserOutlined,\r\n        },{\r\n            menuName: '管理员',\r\n            menuUrl: '/accountManagement',\r\n            icon: UserOutlined,\r\n        }]\r\n    },]\r\nfunction showMenu(menu: MenuItem) {\r\n    let Icon = menu.icon;\r\n    if (menu.child) {\r\n        return (\r\n            <SubMenu key={menu.menuUrl}\r\n                     title={<span><Icon/><span>{menu.menuName}</span></span>}>\r\n                {\r\n                    menu.child.map((v: MenuItem) => showMenu(v))\r\n                }\r\n            </SubMenu>\r\n        )\r\n    } else {\r\n        return (\r\n            <Menu.Item key={menu.menuUrl}>\r\n                <Icon/>\r\n                <span className=\"nav-text\">{menu.menuName}</span>\r\n            </Menu.Item>\r\n        )\r\n    }\r\n}\r\n//export const Result=()=>MenuList.map((v: MenuItem) =>showMenu(v))\r\nexport const Result=MenuList.map((v: MenuItem) =>showMenu(v))","import React, {lazy, Suspense} from 'react'\r\nimport {HashRouter, Redirect, Route, Switch} from 'react-router-dom'\r\n\r\nconst Home = lazy(() => import('../Page/Home'));\r\nexport default class Router extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <HashRouter>\r\n                <Suspense fallback=\"\">\r\n                    <Switch>\r\n                        <Route exact path=\"/\" component={Home}/>\r\n                        <Redirect from=\"/*\" to=\"/\"/>\r\n                    </Switch>\r\n                </Suspense>\r\n            </HashRouter>)\r\n    }\r\n}","import React ,{FC} from \"react\";\r\nimport { Layout, Menu } from 'antd';\r\nimport {Result} from \"../Sidebar\"\r\nimport Router from \"../../Router/Router\"\r\nimport \"./index.scss\"\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nexport const MyLayout:FC = ()=>{\r\n    return <Layout >\r\n        <Sider\r\n            style={{\r\n                overflow: 'auto',\r\n                height: '100vh',\r\n                position: 'fixed',\r\n                left: 0,\r\n            }}\r\n        >\r\n            <div className={\"headerTitle\"}>地府<br/>管理系统</div>\r\n            <Menu theme=\"dark\" mode=\"vertical\" onClick={(a) => {\r\n                sessionStorage.pageNum = 1;\r\n                //history.push({pathname: a.key})\r\n            }}>\r\n                {Result}\r\n            </Menu>\r\n        </Sider>\r\n        <Layout className=\"site-layout\" style={{ marginLeft: 200 }}>\r\n            <Header className=\"site-layout-background\" style={{ padding: 0 }} />\r\n            <Content style={{ margin: '24px 16px 0', overflow: 'initial' }}>\r\n                <div className=\"site-layout-background\" style={{ padding: 24,minHeight:\"79vh\", textAlign: 'center' }}>\r\n                    <Router/>\r\n                </div>\r\n            </Content>\r\n            <Footer style={{ textAlign: 'center' }}>Ant Design ©2018 Created by Ant UED</Footer>\r\n        </Layout>\r\n    </Layout>\r\n}\r\n","import React ,{FC} from \"react\";\r\nimport {Login}  from '../Page/Login';\r\nimport {MyLayout} from '../FrameWork/Layout'\r\nimport './App.css';\r\nimport {cacheUser} from \"../Redux/Action\";\r\nimport {connect} from \"react-redux\";\r\nconst App:FC<userMeg>=(props)=>{\r\n  console.log(props)\r\n  return props.phone&&props.phone!==\"\"?<div>\r\n    <MyLayout/>\r\n  </div>: <Login/>\r\n}\r\nconst mapStateToProps = (state: {cacheUserReducer:userMeg}): userMeg => {\r\n  console.log(\"app\",state)\r\n  return ({\r\n    userName: state.cacheUserReducer.userName,\r\n    phone:state.cacheUserReducer.phone\r\n  })\r\n}\r\nconst mapDispatchToProps = (dispatch:any, ownProps:any) => {\r\n  return {\r\n    cacheLogin:(user:userMeg)=>dispatch(cacheUser(user)),\r\n  }\r\n};\r\nexport default connect(mapStateToProps,mapDispatchToProps)(App);\r\n","import Mock from 'mockjs'\r\nimport {MenuList} from \"../FrameWork/Sidebar\"\r\nconst Random = Mock.Random\r\n\r\n// mock需要给三个参数,url(与axios请求是传的url一致,我这个是本地启动的项目就直接用本地域名了)\r\n// 请求类型: get post...其他看文档\r\n// 数据处理函数,函数需要return数据\r\nMock.mock('http://localhost:8081/test/city', 'get', () => {\r\n    let citys = []\r\n    for (let i = 0; i < 10; i++) {\r\n        let obj = {\r\n            id: i+1,\r\n            city: Random.city(),\r\n            color: Random.color()\r\n        }\r\n        citys.push(obj)\r\n    }\r\n    return {cityList: citys}\r\n})\r\n// post请求,带参数,参数会在data中返回,会返回url,type,body三个参数,可以把data打印出来看看\r\nMock.mock('http://localhost:8081/test/cityInfo', 'post', (data:any) => {\r\n    // 请求传过来的参数在body中,传回的是json字符串,需要转义一下\r\n    const info= JSON.parse(data.body)\r\n    console.log(\"Mock-----\",info)\r\n    return {\r\n        img: Random.image('200x100', '#4A7BF7', info.name)\r\n    }\r\n})\r\n\r\nMock.mock('http://localhost:8081/test/login', 'post', (data:any) => {\r\n    // 请求传过来的参数在body中,传回的是json字符串,需要转义一下\r\n    const info= JSON.parse(data.body)\r\n    console.log(\"Mock-----\",info)\r\n    if(info.userName===\"admin\"&&info.phone===\"13311112222\"){\r\n        return {\r\n            errorCode:\"200\",\r\n            value:\"成功\",\r\n            data:MenuList\r\n        }\r\n    }else {\r\n        return {\r\n            errorCode:\"-1\",\r\n            value:\"失败\",\r\n            data:undefined\r\n        }\r\n    }\r\n})","import { combineReducers } from 'redux'\r\n\r\nconst initialState:userMeg = {\r\n    userName:\"\",\r\n    phone:\"\"\r\n}\r\n\r\nfunction cacheUserReducer(state:userMeg=initialState, action:{type:string,user:userMeg}) {\r\n    if(action.type===\"userLogin\"){\r\n        return action.user\r\n    }\r\n    // 这里暂不处理任何 action，\r\n    // 仅返回传入的 state。\r\n    return state\r\n}\r\nexport const rootReducer = combineReducers({\r\n    cacheUserReducer\r\n})","import { createStore } from 'redux'\r\nimport {rootReducer} from '../Reducer'\r\nlet store = createStore(rootReducer)\r\n// 打印初始状态\r\n//console.log(store)\r\nconsole.log(\"store.getState\",store.getState())\r\n\r\n// 每次 state 更新时，打印日志\r\n// 注意 subscribe() 返回一个函数用来注销监听器\r\nconst unsubscribe = store.subscribe(() => console.log(store.getState()))\r\n\r\n// 发起一系列 action\r\n// store.dispatch(addTodo('Learn about actions'))\r\n// store.dispatch(addTodo('Learn about reducers'))\r\n// store.dispatch(addTodo('Learn about store'))\r\n// store.dispatch(toggleTodo(0))\r\n// store.dispatch(toggleTodo(1))\r\n// store.dispatch(setVisibilityFilter(VisibilityFilters.SHOW_COMPLETED))\r\n\r\n// 停止监听 state 更新\r\n//unsubscribe()\r\nexport {store}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport './index.css';\nimport App from '../App/App';\nimport \"../Mock\"\nimport {store} from \"../Redux/Store\"\n//import reportWebVitals from './reportWebVitals';\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}